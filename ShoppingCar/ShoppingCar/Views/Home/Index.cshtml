@model HomeViewModel

@{
    ViewData["Title"] = "Shopping Car";

    var prevDisabled = !Model.Products.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Products.HasNextPage ? "disabled" : "";
}

<div class="mb-3">
    <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" class="text-primary btn btn-link">Ordenar por Nombre</a>&nbsp;&nbsp;
    <a asp-action="Index" asp-route-sortOrder="@ViewData["PriceSortParm"]" class="text-primary btn btn-link">Ordenar por Precio</a>
</div>

<h3>Categorías</h3>

<div class="mb-3">
    @foreach (var item in Model.Categories) {
        <span>
            <a href="@Url.Action("Index", "Home", new { searchString = item.Name})" 
            class="btn text-black btn-category">
                @item.Name&nbsp;
            </a>
        </span>
    }
</div>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Buscar por nombre o categoría: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Buscar" class="btn btn-warning" />
            <a asp-action="Index" class="btn btn-success">Ver Todos los Productos</a>
        </p>
    </div>
</form>

@if(Model.Quantity > 0) {
    <a asp-action="ShowCart" class="btn btn-outline-primary">
        Ver Carro de Compras 
        <span class="quantity">(@Model.Quantity)</span>
    </a>
}

<div class="row row-cols-1 row-cols-md-4 g-4 mt-1">
    @if (Model.Products.Count() > 0) {
        @foreach (var item in Model.Products) {
            <div class="col">
                <div class="card h-100">
                    <div class="text-center zoom">
                        <img src="@item.ImageFullPath" style="height:150px; max-width:200px;" class="text-center" alt=@item.Name />
                    </div>

                    <div class="card-body">
                        <h5 class="card-title text-navy"> @item.Name</h5>
                        <p class="card-text smfnt">@item.Description</p>
                        <h5 class="text-muted">@Html.DisplayFor(modelItem => item.Price)</h5>
                    </div>

                    <div class="card-footer text-center">
                        <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-secondary">Detalles</a>
                        <a asp-action="Add" asp-route-id="@item.Id" class="btn btn-sm btn-primary">Agregar al carrito</a>
                    </div>
                </div>
            </div>
        }
    } else {
        <h3>No hay productos con su criterio de búsqueda</h3>
    }
</div>

<div class="mt-5">
    <a asp-action="Index"
    asp-route-sortOrder="@ViewData["CurrentSort"]"
    asp-route-pageNumber="@(Model.Products.PageIndex - 1)"
    asp-route-currentFilter="@ViewData["CurrentFilter"]"
    class="btn btn-warning @prevDisabled">
        <i class="fa-solid fa-chevron-left"></i>
    </a>

    <span class="text-dark-50 pagination-margin">
        @(Model.Products.PageIndex) / @(Model.Products.TotalPages)
    </span>

    <a asp-action="Index"
    asp-route-sortOrder="@ViewData["CurrentSort"]"
    asp-route-pageNumber="@(Model.Products.PageIndex + 1)"
    asp-route-currentFilter="@ViewData["CurrentFilter"]"
    class="btn btn-warning @nextDisabled">
        <i class="fa-solid fa-chevron-right"></i>
    </a>
</div>

<style type="text/css">
    .btn-category:hover {
        color: #808080 !important;
    }

    .card {
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        border: 1px solid lightgray;
        box-shadow: 2px 2px 8px 4px #d3d3d3d1;
        border-radius: 15px;
        font-family: sans-serif;
        margin: 5px;
    }

    .pagination-margin {
        margin: 0 1rem;
        font-size: 1.25rem;
    }
</style>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>

    </script>
}